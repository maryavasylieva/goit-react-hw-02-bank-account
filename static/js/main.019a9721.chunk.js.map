{"version":3,"sources":["Components/Dashboard.module.css","Components/Balance.js","Components/TransactionHistory.js","Components/notification.js","Components/Controls.js","Components/Dashboard.js","App.js","index.js"],"names":["module","exports","controls","balance","balanceSpan","history","Balance","_ref","deposit","withdraw","react_default","a","createElement","className","styles","role","aria-label","TransactionHistory","transactions","length","map","transaction","key","id","type","amount","date","notyf","addNum","toNull","success","error","Controls","state","handleClick","e","_this","amountNumber","Number","toast","target","name","props","toAddTransaction","Object","objectSpread","setState","handleChange","value","this","onChange","onClick","react_toastify","closeButton","Component","shortid","require","Dashboard","newTransaction","generate","concat","Date","toLocaleDateString","toLocaleTimeString","toConsumableArray","toDeposit","arr","filter","el","reduce","acc","cur","toWithdraw","_this$state","dashboard","Components_Controls","Components_Balance","Components_TransactionHistory","App","Components_Dashboard","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.019a9721.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Dashboard_controls__22BJ_\",\"balance\":\"Dashboard_balance__2Sdlx\",\"balanceSpan\":\"Dashboard_balanceSpan__vVS7S\",\"history\":\"Dashboard_history__QJGwD\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Dashboard.module.css';\n\nconst Balance = ({ balance, deposit, withdraw }) => (\n  <section className={styles.balance}>\n    <span role=\"img\" aria-label=\"arrow-up\">\n      ⬆️\n    </span>\n    <span className={styles.balanceSpan}>{deposit}$</span>\n    <span role=\"img\" aria-label=\"arrow-down\">\n      ⬇️\n    </span>\n    <span className={styles.balanceSpan}>{withdraw}$</span>\n    <span className={styles.balanceSpan}>Balance: {balance}$</span>\n  </section>\n);\n\nBalance.propTypes = {\n  withdraw: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n  deposit: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Dashboard.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n  return (\n    <table className={styles.history}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions.length > 0 &&\n          transactions.map(transaction => (\n            <tr key={transaction.id}>\n              <td>{transaction.type}</td>\n              <td>{transaction.amount}$</td>\n              <td>{transaction.date}</td>\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n\nexport default TransactionHistory;\n","const notyf = {\n  addNum: 'Введите сумму для проведения операции!',\n  toNull: 'На счету недостаточно средств для проведения операции!',\n  success: 'Операция произведена успешно!',\n  error: 'Операция не может быть произведена!',\n};\n\nexport default notyf;\n","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport styles from './Dashboard.module.css';\nimport notyf from './notification';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Controls extends Component {\n  static propTypes = {\n    balance: PropTypes.number.isRequired,\n    toAddTransaction: PropTypes.func.isRequired,\n  };\n\n  state = { amount: '' };\n\n  handleClick = e => {\n    const { amount } = this.state;\n    const amountNumber = Number(amount);\n\n    if (amountNumber < 0) return toast.error(notyf.error);\n    if (amountNumber === 0) {\n      return toast.error(notyf.addNum);\n    }\n    if (e.target.name === 'Withdraw') {\n      if (amountNumber > this.props.balance) {\n        return toast.error(notyf.toNull);\n      }\n    }\n    toast.success(notyf.success);\n    this.props.toAddTransaction({ ...this.state, type: e.target.name });\n    return this.setState({ amount: '' });\n  };\n\n  handleChange = e => this.setState({ amount: e.target.value });\n\n  render() {\n    const { amount } = this.state;\n    return (\n      <section className={styles.controls}>\n        <input type=\"number\" value={amount} onChange={this.handleChange} />\n        <button type=\"button\" name=\"Deposit\" onClick={this.handleClick}>\n          Deposit\n        </button>\n        <button type=\"button\" name=\"Withdraw\" onClick={this.handleClick}>\n          Withdraw\n        </button>\n        <ToastContainer closeButton={false} />\n      </section>\n    );\n  }\n}\n\nexport default Controls;\n","import React, { Component } from 'react';\nimport styles from './Dashboard.module.css';\nimport Balance from './Balance';\nimport TransactionHistory from './TransactionHistory';\nimport Controls from './Controls';\n\nconst shortid = require('shortid');\n\nclass Dashboard extends Component {\n  state = { transactions: [], balance: 0 };\n\n  toAddTransaction = transaction => {\n    const newTransaction = {\n      id: shortid.generate(),\n      date: `${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}`,\n      ...transaction,\n    };\n\n    this.setState(state => ({\n      transactions: [...state.transactions, newTransaction],\n      balance:\n        newTransaction.type === 'Deposit'\n          ? state.balance + Number(newTransaction.amount)\n          : state.balance - Number(newTransaction.amount),\n    }));\n  };\n\n  toDeposit = arr =>\n    arr\n      .filter(el => el.type === 'Deposit')\n      .reduce((acc, cur) => acc + Number(cur.amount), 0);\n\n  toWithdraw = arr =>\n    arr\n      .filter(el => el.type === 'Withdraw')\n      .reduce((acc, cur) => acc + Number(cur.amount), 0);\n\n  render() {\n    const { transactions, balance } = this.state;\n    return (\n      <div className={styles.dashboard}>\n        <Controls balance={balance} toAddTransaction={this.toAddTransaction} />\n        <Balance\n          balance={balance}\n          withdraw={this.toWithdraw(transactions)}\n          deposit={this.toDeposit(transactions)}\n        />\n        <TransactionHistory transactions={transactions} />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport Dashboard from './Components/Dashboard';\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}